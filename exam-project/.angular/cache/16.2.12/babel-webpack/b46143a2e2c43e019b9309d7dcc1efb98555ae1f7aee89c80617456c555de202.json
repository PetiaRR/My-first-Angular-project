{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n  }\n  register(username, email, password, rePassword) {\n    const api = 'http://localhost:3000';\n    return this.http.post('api/auth/register', {\n      username,\n      email,\n      password,\n      rePassword\n    });\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["UserService","constructor","http","register","username","email","password","rePassword","api","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\PetiaRR\\Desktop\\Angular\\exam-project\\My-first-Angular-project\\src\\app\\user\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  register(\n    username: string,\n    email: string,\n    password: string,\n    rePassword: string\n  ) {\n    const api = 'http://localhost:3000'\n    return this.http\n      .post('api/auth/register', {\n        username,\n        email,\n        password,\n        rePassword,\n      })\n      ;\n  }\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,QAAQA,CACNC,QAAgB,EAChBC,KAAa,EACbC,QAAgB,EAChBC,UAAkB;IAElB,MAAMC,GAAG,GAAG,uBAAuB;IACnC,OAAO,IAAI,CAACN,IAAI,CACbO,IAAI,CAAC,mBAAmB,EAAE;MACzBL,QAAQ;MACRC,KAAK;MACLC,QAAQ;MACRC;KACD,CAAC;EAEN;EAAC,QAAAG,CAAA,G;qBAnBUV,WAAW,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXf,WAAW;IAAAgB,OAAA,EAAXhB,WAAW,CAAAiB,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}