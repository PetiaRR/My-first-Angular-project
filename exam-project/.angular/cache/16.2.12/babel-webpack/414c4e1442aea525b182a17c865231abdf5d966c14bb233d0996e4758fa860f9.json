{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ProfilComponent = class ProfilComponent {\n  constructor(userService, router, form) {\n    this.userService = userService;\n    this.router = router;\n    this.form = form;\n    this.showEditMode = false;\n    this.profileDetails = {\n      username: '',\n      email: ''\n    };\n  }\n  ngOnInit() {\n    const {\n      username,\n      email\n    } = this.userService.user;\n    this.profileDetails = {\n      username,\n      email\n    };\n    this.form.setValue({\n      username,\n      email\n    });\n  }\n  onToggle() {\n    this.showEditMode = !this.showEditMode;\n  }\n  saveProfileHandle() {\n    if (this.form.invalid) {\n      return;\n    }\n    this.profileDetails = this.form.value;\n    const {\n      username,\n      email\n    } = this.profileDetails;\n    this.userService.updateProfile(username, email).subscribe(() => {\n      this.onToggle();\n    });\n  }\n  onCancel(e) {\n    e.preventDefault();\n    this.onToggle();\n  }\n  profil(form) {\n    if (form.invalid) {\n      return;\n    }\n    const {\n      email,\n      password\n    } = form.value;\n    this.userService.login(email, password).subscribe(() => {\n      this.router.navigate(['/home']);\n    });\n  }\n};\nProfilComponent = __decorate([Component({\n  selector: 'app-profil',\n  templateUrl: './profil.component.html',\n  styleUrls: ['./profil.component.css']\n})], ProfilComponent);","map":{"version":3,"names":["Component","ProfilComponent","constructor","userService","router","form","showEditMode","profileDetails","username","email","ngOnInit","user","setValue","onToggle","saveProfileHandle","invalid","value","updateProfile","subscribe","onCancel","e","preventDefault","profil","password","login","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\PetiaRR\\Desktop\\Angular\\proba\\src\\app\\user\\profil\\profil.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { UserService } from '../user.service';\nimport { Router } from '@angular/router';\nimport { ProfileDetails } from 'src/app/types/user';\n\n@Component({\n  selector: 'app-profil',\n  templateUrl: './profil.component.html',\n  styleUrls: ['./profil.component.css']\n})\nexport class ProfilComponent implements OnInit{\n\n  showEditMode: boolean = false;\n\n  profileDetails: ProfileDetails = {\n    username: '',\n    email: '',\n  };\n\n  constructor(private userService: UserService, private router: Router, private form: NgForm) {}\n  \n  ngOnInit(): void {\n    const { username, email } = this.userService.user!;\n\n    this.profileDetails = {\n      username,\n      email,\n    };\n\n    this.form.setValue({\n      username,\n      email,\n    });\n  }\n\n  onToggle(): void {\n    this.showEditMode = !this.showEditMode;\n  }\n\n  saveProfileHandle(): void {\n    if (this.form.invalid) {\n      return;\n    }\n\n    this.profileDetails = this.form.value as ProfileDetails;\n    const { username, email } = this.profileDetails;\n\n    this.userService.updateProfile(username, email).subscribe(() => {\n      this.onToggle();\n    });\n  }\n\n  onCancel(e: Event) {\n    e.preventDefault();\n    this.onToggle();\n  }\n\n\nprofil(form: NgForm) {\n  if (form.invalid) {\n    return;\n  }\n\n  const { email, password } = form.value;\n  \n  this.userService.login(email, password).subscribe(() => {\n    this.router.navigate(['/home']);\n  });\n  \n}\n  \n\n}\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAW1C,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAS1BC,YAAoBC,WAAwB,EAAUC,MAAc,EAAUC,IAAY;IAAtE,KAAAF,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,IAAI,GAAJA,IAAI;IAPlF,KAAAC,YAAY,GAAY,KAAK;IAE7B,KAAAC,cAAc,GAAmB;MAC/BC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE;KACR;EAE4F;EAE7FC,QAAQA,CAAA;IACN,MAAM;MAAEF,QAAQ;MAAEC;IAAK,CAAE,GAAG,IAAI,CAACN,WAAW,CAACQ,IAAK;IAElD,IAAI,CAACJ,cAAc,GAAG;MACpBC,QAAQ;MACRC;KACD;IAED,IAAI,CAACJ,IAAI,CAACO,QAAQ,CAAC;MACjBJ,QAAQ;MACRC;KACD,CAAC;EACJ;EAEAI,QAAQA,CAAA;IACN,IAAI,CAACP,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;EACxC;EAEAQ,iBAAiBA,CAAA;IACf,IAAI,IAAI,CAACT,IAAI,CAACU,OAAO,EAAE;MACrB;;IAGF,IAAI,CAACR,cAAc,GAAG,IAAI,CAACF,IAAI,CAACW,KAAuB;IACvD,MAAM;MAAER,QAAQ;MAAEC;IAAK,CAAE,GAAG,IAAI,CAACF,cAAc;IAE/C,IAAI,CAACJ,WAAW,CAACc,aAAa,CAACT,QAAQ,EAAEC,KAAK,CAAC,CAACS,SAAS,CAAC,MAAK;MAC7D,IAAI,CAACL,QAAQ,EAAE;IACjB,CAAC,CAAC;EACJ;EAEAM,QAAQA,CAACC,CAAQ;IACfA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAI,CAACR,QAAQ,EAAE;EACjB;EAGFS,MAAMA,CAACjB,IAAY;IACjB,IAAIA,IAAI,CAACU,OAAO,EAAE;MAChB;;IAGF,MAAM;MAAEN,KAAK;MAAEc;IAAQ,CAAE,GAAGlB,IAAI,CAACW,KAAK;IAEtC,IAAI,CAACb,WAAW,CAACqB,KAAK,CAACf,KAAK,EAAEc,QAAQ,CAAC,CAACL,SAAS,CAAC,MAAK;MACrD,IAAI,CAACd,MAAM,CAACqB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC,CAAC;EAEJ;CAGC;AA9DYxB,eAAe,GAAAyB,UAAA,EAL3B1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACW5B,eAAe,CA8D3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}