{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ErrorService {\n  constructor() {\n    this.apiError$$ = new BehaviorSubject(null);\n    this.apiError$ = this.apiError$$.asObservable();\n  }\n  setError(error) {\n    this.apiError$$.next(error);\n  }\n  static #_ = this.ɵfac = function ErrorService_Factory(t) {\n    return new (t || ErrorService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ErrorService,\n    factory: ErrorService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","ErrorService","constructor","apiError$$","apiError$","asObservable","setError","error","next","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\PetiaRR\\Desktop\\Angular\\exam-project\\My-first-Angular-project\\My-first-Angular-project\\exam-project\\src\\app\\core\\error\\error.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorService {\n  private apiError$$ = new BehaviorSubject(null);\n  public apiError$ = this.apiError$$.asObservable();\n\n  constructor() {}\n\n  setError(error: any): void {\n    this.apiError$$.next(error);\n  }\n}\n"],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,YAAY;EAIvBC,YAAA;IAHQ,KAAAC,UAAU,GAAG,IAAIH,eAAe,CAAC,IAAI,CAAC;IACvC,KAAAI,SAAS,GAAG,IAAI,CAACD,UAAU,CAACE,YAAY,EAAE;EAElC;EAEfC,QAAQA,CAACC,KAAU;IACjB,IAAI,CAACJ,UAAU,CAACK,IAAI,CAACD,KAAK,CAAC;EAC7B;EAAC,QAAAE,CAAA,G;qBARUR,YAAY;EAAA;EAAA,QAAAS,EAAA,G;WAAZT,YAAY;IAAAU,OAAA,EAAZV,YAAY,CAAAW,IAAA;IAAAC,UAAA,EAFX;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}