{"ast":null,"code":"import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { catchError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./core/error/error.service\";\nimport * as i2 from \"@angular/router\";\nconst apiUrl = 'http://localhost:3000';\nclass AppInterceptor {\n  constructor(errorService, router) {\n    this.errorService = errorService;\n    this.router = router;\n    this.API = '';\n  }\n  intercept(req, next) {\n    if (req.url.startsWith(this.API)) {\n      req = req.clone({\n        url: req.url.replace(this.API, apiUrl),\n        withCredentials: true\n      });\n    }\n    return next.handle(req).pipe(catchError(err => {\n      if (err.status === 401) {\n        this.router.navigate(['/auth/login']);\n      } else {\n        this.errorService.setError(err);\n        this.router.navigate(['/error']);\n      }\n      return [err];\n    }));\n  }\n  static #_ = this.ɵfac = function AppInterceptor_Factory(t) {\n    return new (t || AppInterceptor)(i0.ɵɵinject(i1.ErrorService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppInterceptor,\n    factory: AppInterceptor.ɵfac\n  });\n}\nexport const appInterceptorProvider = {\n  useClass: AppInterceptor,\n  multi: true,\n  provide: HTTP_INTERCEPTORS\n};","map":{"version":3,"names":["HTTP_INTERCEPTORS","catchError","apiUrl","AppInterceptor","constructor","errorService","router","API","intercept","req","next","url","startsWith","clone","replace","withCredentials","handle","pipe","err","status","navigate","setError","_","i0","ɵɵinject","i1","ErrorService","i2","Router","_2","factory","ɵfac","appInterceptorProvider","useClass","multi","provide"],"sources":["C:\\Users\\PetiaRR\\Desktop\\Angular\\proba\\src\\app\\app.interceptor.ts"],"sourcesContent":["import {\r\n    HTTP_INTERCEPTORS,\r\n    HttpEvent,\r\n    HttpHandler,\r\n    HttpInterceptor,\r\n    HttpRequest,\r\n  } from '@angular/common/http';\r\n  import { Injectable, Provider } from '@angular/core';\r\n  import { Observable, catchError } from 'rxjs';\r\n  //import { environment } from 'src/environments/environment.development';\r\n  import { ErrorService } from './core/error/error.service';\r\n  import { Router } from '@angular/router';\r\n  \r\n  const apiUrl = 'http://localhost:3000';\r\n  \r\n  @Injectable()\r\n  class AppInterceptor implements HttpInterceptor {\r\n    API = '';\r\n  \r\n    constructor(private errorService: ErrorService, private router: Router) {}\r\n  \r\n    intercept(\r\n      req: HttpRequest<any>,\r\n      next: HttpHandler\r\n    ): Observable<HttpEvent<any>> {\r\n      if (req.url.startsWith(this.API)) {\r\n        req = req.clone({\r\n          url: req.url.replace(this.API, apiUrl),\r\n          withCredentials: true,\r\n        });\r\n      }\r\n  \r\n      return next.handle(req).pipe(\r\n        catchError((err) => {\r\n          if (err.status === 401) {\r\n            this.router.navigate(['/auth/login']);\r\n          } else {\r\n            this.errorService.setError(err);\r\n            this.router.navigate(['/error']);\r\n          }\r\n  \r\n          return [err];\r\n        })\r\n      );\r\n    }\r\n  }\r\n  \r\n  export const appInterceptorProvider: Provider = {\r\n    useClass: AppInterceptor,\r\n    multi: true,\r\n    provide: HTTP_INTERCEPTORS,\r\n  };"],"mappings":"AAAA,SACIA,iBAAiB,QAKZ,sBAAsB;AAE7B,SAAqBC,UAAU,QAAQ,MAAM;;;;AAK7C,MAAMC,MAAM,GAAG,uBAAuB;AAEtC,MACMC,cAAc;EAGlBC,YAAoBC,YAA0B,EAAUC,MAAc;IAAlD,KAAAD,YAAY,GAAZA,YAAY;IAAwB,KAAAC,MAAM,GAANA,MAAM;IAF9D,KAAAC,GAAG,GAAG,EAAE;EAEiE;EAEzEC,SAASA,CACPC,GAAqB,EACrBC,IAAiB;IAEjB,IAAID,GAAG,CAACE,GAAG,CAACC,UAAU,CAAC,IAAI,CAACL,GAAG,CAAC,EAAE;MAChCE,GAAG,GAAGA,GAAG,CAACI,KAAK,CAAC;QACdF,GAAG,EAAEF,GAAG,CAACE,GAAG,CAACG,OAAO,CAAC,IAAI,CAACP,GAAG,EAAEL,MAAM,CAAC;QACtCa,eAAe,EAAE;OAClB,CAAC;;IAGJ,OAAOL,IAAI,CAACM,MAAM,CAACP,GAAG,CAAC,CAACQ,IAAI,CAC1BhB,UAAU,CAAEiB,GAAG,IAAI;MACjB,IAAIA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QACtB,IAAI,CAACb,MAAM,CAACc,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;OACtC,MAAM;QACL,IAAI,CAACf,YAAY,CAACgB,QAAQ,CAACH,GAAG,CAAC;QAC/B,IAAI,CAACZ,MAAM,CAACc,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;;MAGlC,OAAO,CAACF,GAAG,CAAC;IACd,CAAC,CAAC,CACH;EACH;EAAC,QAAAI,CAAA,G;qBA5BGnB,cAAc,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAd1B,cAAc;IAAA2B,OAAA,EAAd3B,cAAc,CAAA4B;EAAA;;AA+BpB,OAAO,MAAMC,sBAAsB,GAAa;EAC9CC,QAAQ,EAAE9B,cAAc;EACxB+B,KAAK,EAAE,IAAI;EACXC,OAAO,EAAEnC;CACV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}